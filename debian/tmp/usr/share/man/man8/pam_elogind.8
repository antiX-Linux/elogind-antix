'\" t
.TH "PAM_ELOGIND" "8" "" "elogind 234.4" "pam_elogind"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pam_elogind \- Register user sessions in the elogind login manager
.SH "SYNOPSIS"
.PP
pam_elogind\&.so
.SH "DESCRIPTION"
.PP
\fBpam_elogind\fR
registers user sessions with the systemd login manager
\fBsystemd-logind.service\fR(8), and hence the systemd control group hierarchy\&.
.PP
On login, this module \(em in conjunction with
systemd\-logind\&.service
\(em ensures the following:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
If it does not exist yet, the user runtime directory
/run/user/$UID
is either created or mounted as new
"tmpfs"
file system with quota applied, and its ownership changed to the user that is logging in\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
The
\fI$XDG_SESSION_ID\fR
environment variable is initialized\&. If auditing is available and
\fBpam_loginuid\&.so\fR
was run before this module (which is highly recommended), the variable is initialized from the auditing session id (/proc/self/sessionid)\&. Otherwise, an independent session counter is used\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
A new systemd scope unit is created for the session\&. If this is the first concurrent session of the user, an implicit per\-user slice unit below
user\&.slice
is automatically created and the scope placed into it\&. An instance of the system service
user@\&.service, which runs the systemd user manager instance, is started\&.
.RE
.PP
On logout, this module ensures the following:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
If enabled in
\fBlogind.conf\fR(5)
(\fIKillUserProcesses=\fR), all processes of the session are terminated\&. If the last concurrent session of a user ends, the user\*(Aqs systemd instance will be terminated too, and so will the user\*(Aqs slice unit\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
If the last concurrent session of a user ends, the user runtime directory
/run/user/$UID
and all its contents are removed, too\&.
.RE
.PP
If the system was not booted up with systemd as init system, this module does nothing and immediately returns
\fBPAM_SUCCESS\fR\&.
.SH "OPTIONS"
.PP
The following options are understood:
.PP
\fBclass=\fR
.RS 4
Takes a string argument which sets the session class\&. The XDG_SESSION_CLASS environmental variable takes precedence\&. One of
"user",
"greeter",
"lock\-screen"
or
"background"\&. See
\fBsd_session_get_class\fR(3)
for details about the session class\&.
.RE
.PP
\fBtype=\fR
.RS 4
Takes a string argument which sets the session type\&. The XDG_SESSION_TYPE environmental variable takes precedence\&. One of
"unspecified",
"tty",
"x11",
"wayland"
or
"mir"\&. See
\fBsd_session_get_type\fR(3)
for details about the session type\&.
.RE
.PP
\fBdebug\fR\fB[=]\fR
.RS 4
Takes an optional boolean argument\&. If yes or without the argument, the module will log debugging information as it operates\&.
.RE
.SH "MODULE TYPES PROVIDED"
.PP
Only
\fBsession\fR
is provided\&.
.SH "ENVIRONMENT"
.PP
The following environment variables are set for the processes of the user\*(Aqs session:
.PP
\fI$XDG_SESSION_ID\fR
.RS 4
A session identifier, suitable to be used in filenames\&. The string itself should be considered opaque, although often it is just the audit session ID as reported by
/proc/self/sessionid\&. Each ID will be assigned only once during machine uptime\&. It may hence be used to uniquely label files or other resources of this session\&.
.RE
.PP
\fI$XDG_RUNTIME_DIR\fR
.RS 4
Path to a user\-private user\-writable directory that is bound to the user login time on the machine\&. It is automatically created the first time a user logs in and removed on the user\*(Aqs final logout\&. If a user logs in twice at the same time, both sessions will see the same
\fI$XDG_RUNTIME_DIR\fR
and the same contents\&. If a user logs in once, then logs out again, and logs in again, the directory contents will have been lost in between, but applications should not rely on this behavior and must be able to deal with stale files\&. To store session\-private data in this directory, the user should include the value of
\fI$XDG_SESSION_ID\fR
in the filename\&. This directory shall be used for runtime file system objects such as
\fBAF_UNIX\fR
sockets, FIFOs, PID files and similar\&. It is guaranteed that this directory is local and offers the greatest possible file system feature set the operating system provides\&. For further details, see the
\m[blue]\fBXDG Base Directory Specification\fR\m[]\&\s-2\u[1]\d\s+2\&.
\fI$XDG_RUNTIME_DIR\fR
is not set if the current user is not the original user of the session\&.
.RE
.PP
The following environment variables are read by the module and may be used by the PAM service to pass metadata to the module:
.PP
\fI$XDG_SESSION_TYPE\fR
.RS 4
The session type\&. This may be used instead of
\fBsession=\fR
on the module parameter line, and is usually preferred\&.
.RE
.PP
\fI$XDG_SESSION_CLASS\fR
.RS 4
The session class\&. This may be used instead of
\fBclass=\fR
on the module parameter line, and is usually preferred\&.
.RE
.PP
\fI$XDG_SESSION_DESKTOP\fR
.RS 4
A single, short identifier string for the desktop environment\&. This may be used to indicate the session desktop used, where this applies and if this information is available\&. For example:
"GNOME", or
"KDE"\&. It is recommended to use the same identifiers and capitalization as for
\fI$XDG_CURRENT_DESKTOP\fR, as defined by the
\m[blue]\fBDesktop Entry Specification\fR\m[]\&\s-2\u[2]\d\s+2\&. (However, note that
\fI$XDG_SESSION_DESKTOP\fR
only takes a single item, and not a colon\-separated list like
\fI$XDG_CURRENT_DESKTOP\fR\&.) See
\fBsd_session_get_desktop\fR(3)
for more details\&.
.RE
.PP
\fI$XDG_SEAT\fR
.RS 4
The seat name the session shall be registered for, if any\&.
.RE
.PP
\fI$XDG_VTNR\fR
.RS 4
The VT number the session shall be registered for, if any\&. (Only applies to seats with a VT available, such as
"seat0")
.RE
.SH "EXAMPLE"
.sp
.if n \{\
.RS 4
.\}
.nf
#%PAM\-1\&.0
auth       required     pam_unix\&.so
auth       required     pam_nologin\&.so
account    required     pam_unix\&.so
password   required     pam_unix\&.so
session    required     pam_unix\&.so
session    required     pam_loginuid\&.so
session    required     pam_elogind\&.so
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsystemd-logind.service\fR(8),
\fBlogind.conf\fR(5),
\fBloginctl\fR(1),
\fBpam.conf\fR(5),
\fBpam.d\fR(5),
\fBpam\fR(8),
\fBpam_loginuid\fR(8),
\fBsystemd.scope\fR(5),
\fBsystemd.slice\fR(5),
\fBsystemd.service\fR(5)
.SH "NOTES"
.IP " 1." 4
XDG Base Directory Specification
.RS 4
\%http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
.RE
.IP " 2." 4
Desktop Entry Specification
.RS 4
\%http://standards.freedesktop.org/desktop-entry-spec/latest/
.RE
