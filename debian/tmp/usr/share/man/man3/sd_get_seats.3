'\" t
.TH "SD_GET_SEATS" "3" "" "elogind 234.4" "sd_get_seats"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sd_get_seats, sd_get_sessions, sd_get_uids, sd_get_machine_names \- Determine available seats, sessions, logged in users and virtual machines/containers
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <elogind/sd\-login\&.h>
.fi
.ft
.HP \w'int\ sd_get_seats('u
.BI "int sd_get_seats(char\ ***" "seats" ");"
.HP \w'int\ sd_get_sessions('u
.BI "int sd_get_sessions(char\ ***" "sessions" ");"
.HP \w'int\ sd_get_uids('u
.BI "int sd_get_uids(uid_t\ **" "users" ");"
.HP \w'int\ sd_get_machine_names('u
.BI "int sd_get_machine_names(char\ ***" "machines" ");"
.SH "DESCRIPTION"
.PP
\fBsd_get_seats()\fR
may be used to determine all currently available local seats\&. Returns the number of seat identifiers and if the input pointer is non\-NULL, a
\fBNULL\fR\-terminated array of seat identifiers is stored at the address\&. The returned array and all strings it references need to be freed with the libc
\fBfree\fR(3)
call after use\&. Note that instead of an empty array
\fBNULL\fR
may be returned and should be considered equivalent to an empty array\&.
.PP
Similarly,
\fBsd_get_sessions()\fR
may be used to determine all current login sessions\&.
.PP
Similarly,
\fBsd_get_uids()\fR
may be used to determine all Unix users who currently have login sessions\&.
.PP
Similarly,
\fBsd_get_machine_names()\fR
may be used to determine all current virtual machines and containers on the system\&.
.PP
Note that the returned lists are not sorted and in an undefined order\&.
.SH "RETURN VALUE"
.PP
On success,
\fBsd_get_seats()\fR,
\fBsd_get_sessions()\fR,
\fBsd_get_uids()\fR
and
\fBsd_get_machine_names()\fR
return the number of entries in the arrays\&. On failure, these calls return a negative errno\-style error code\&.
.SH "ERRORS"
.PP
Returned errors may indicate the following problems:
.PP
\fB\-ENOMEM\fR
.RS 4
Memory allocation failed\&.
.RE
.SH "NOTES"
.PP
The
\fBsd_get_seats()\fR,
\fBsd_get_sessions()\fR,
\fBsd_get_uids()\fR
and
\fBsd_get_machine_names()\fR
interfaces are available as a shared library, which can be compiled and linked to with the
\fBlibelogind\fR\ \&\fBpkg-config\fR(1)
file\&.
.SH "SEE ALSO"
.PP
\fBelogind\fR(8),
\fBsd-login\fR(3),
\fBsd_session_get_seat\fR(3)
