'\" t
.TH "ELOGIND\&.INDEX" "7" "" "elogind 234.4" "elogind.index"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
elogind.index \- List all manpages from the elogind project
.SH "E"
.PP
\fBelogind\fR(8)
\(em Login manager
.br
\fBelogind.directives\fR(7)
\(em Index of configuration directives
.br

.SH "L"
.PP
\fBloginctl\fR(1)
\(em Control the elogind login manager
.br
\fBlogind.conf\fR(5)
\(em Login manager configuration files
.br

.SH "P"
.PP
\fBpam_elogind\fR(8)
\(em Register user sessions in the elogind login manager
.br

.SH "S"
.PP
\fBsd-bus\fR(3)
\(em A lightweight D\-Bus IPC client library
.br
\fBsd-event\fR(3)
\(em A generic event loop implementation
.br
\fBsd_booted\fR(3)
\(em Test whether the system is running the systemd init system
.br
\fBsd_bus_add_match\fR(3)
\(em Add a match rule for message dispatching
.br
\fBsd_bus_creds_get_audit_login_uid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_audit_session_id\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_augmented_mask\fR(3)
\(em Retrieve credentials object for the specified PID
.br
\fBsd_bus_creds_get_cgroup\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_cmdline\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_comm\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_description\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_egid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_euid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_exe\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_fsgid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_fsuid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_gid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_mask\fR(3)
\(em Retrieve credentials object for the specified PID
.br
\fBsd_bus_creds_get_owner_uid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_pid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_ppid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_selinux_context\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_session\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_sgid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_suid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_supplementary_gids\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_tid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_tid_comm\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_tty\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_uid\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_unique_name\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_get_well_known_names\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_has_bounding_cap\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_has_effective_cap\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_has_inheritable_cap\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_has_permitted_cap\fR(3)
\(em Retrieve fields from a credentials object
.br
\fBsd_bus_creds_new_from_pid\fR(3)
\(em Retrieve credentials object for the specified PID
.br
\fBsd_bus_creds_ref\fR(3)
\(em Retrieve credentials object for the specified PID
.br
\fBsd_bus_creds_unref\fR(3)
\(em Retrieve credentials object for the specified PID
.br
\fBsd_bus_creds_unrefp\fR(3)
\(em Retrieve credentials object for the specified PID
.br
\fBsd_bus_default\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_default_system\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_default_user\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_error\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_add_map\fR(3)
\(em Additional sd\-dbus error mappings
.br
\fBsd_bus_error_copy\fR(3)
\(em sd\-bus error handling
.br
\fBSD_BUS_ERROR_END\fR(3)
\(em Additional sd\-dbus error mappings
.br
\fBsd_bus_error_free\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_get_errno\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_has_name\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_is_set\fR(3)
\(em sd\-bus error handling
.br
\fBSD_BUS_ERROR_MAKE_CONST\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_map\fR(3)
\(em Additional sd\-dbus error mappings
.br
\fBSD_BUS_ERROR_MAP\fR(3)
\(em Additional sd\-dbus error mappings
.br
\fBSD_BUS_ERROR_NULL\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_set\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_set_const\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_set_errno\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_set_errnof\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_set_errnofv\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_error_setf\fR(3)
\(em sd\-bus error handling
.br
\fBsd_bus_get_fd\fR(3)
\(em Get the file descriptor connected to the message bus
.br
\fBsd_bus_message_append\fR(3)
\(em Attach fields to a D\-Bus message based on a type string
.br
\fBsd_bus_message_append_array\fR(3)
\(em Append an array of fields to a D\-Bus message
.br
\fBsd_bus_message_append_array_iovec\fR(3)
\(em Append an array of fields to a D\-Bus message
.br
\fBsd_bus_message_append_array_memfd\fR(3)
\(em Append an array of fields to a D\-Bus message
.br
\fBsd_bus_message_append_array_space\fR(3)
\(em Append an array of fields to a D\-Bus message
.br
\fBsd_bus_message_append_basic\fR(3)
\(em Attach a single field to a message
.br
\fBsd_bus_message_append_string_iovec\fR(3)
\(em Attach a string to a message
.br
\fBsd_bus_message_append_string_memfd\fR(3)
\(em Attach a string to a message
.br
\fBsd_bus_message_append_string_space\fR(3)
\(em Attach a string to a message
.br
\fBsd_bus_message_append_strv\fR(3)
\(em Attach an array of strings to a message
.br
\fBsd_bus_message_get_cookie\fR(3)
\(em Returns the transaction cookie of a message
.br
\fBsd_bus_message_get_monotonic_usec\fR(3)
\(em Retrieve the sender timestamps and sequence number of a message
.br
\fBsd_bus_message_get_realtime_usec\fR(3)
\(em Retrieve the sender timestamps and sequence number of a message
.br
\fBsd_bus_message_get_reply_cookie\fR(3)
\(em Returns the transaction cookie of a message
.br
\fBsd_bus_message_get_seqnum\fR(3)
\(em Retrieve the sender timestamps and sequence number of a message
.br
\fBsd_bus_message_read_basic\fR(3)
\(em Read a basic type from a message
.br
\fBsd_bus_negotiate_creds\fR(3)
\(em Control feature negotiation on bus connections
.br
\fBsd_bus_negotiate_fds\fR(3)
\(em Control feature negotiation on bus connections
.br
\fBsd_bus_negotiate_timestamp\fR(3)
\(em Control feature negotiation on bus connections
.br
\fBsd_bus_new\fR(3)
\(em Create a new bus object and create or destroy references to it
.br
\fBsd_bus_open\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_open_system\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_open_system_machine\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_open_system_remote\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_open_user\fR(3)
\(em Acquire a connection to a system or user bus
.br
\fBsd_bus_path_decode\fR(3)
\(em Convert an external identifier into an object path and back
.br
\fBsd_bus_path_decode_many\fR(3)
\(em Convert an external identifier into an object path and back
.br
\fBsd_bus_path_encode\fR(3)
\(em Convert an external identifier into an object path and back
.br
\fBsd_bus_path_encode_many\fR(3)
\(em Convert an external identifier into an object path and back
.br
\fBsd_bus_process\fR(3)
\(em Drive the connection
.br
\fBsd_bus_ref\fR(3)
\(em Create a new bus object and create or destroy references to it
.br
\fBsd_bus_release_name\fR(3)
\(em Request or release a well\-known service name on a bus
.br
\fBsd_bus_request_name\fR(3)
\(em Request or release a well\-known service name on a bus
.br
\fBsd_bus_track_add_name\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_add_sender\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_contains\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_count\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_count_name\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_count_sender\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_first\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_get_bus\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_get_recursive\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_get_userdata\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_new\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_next\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_ref\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_remove_name\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_remove_sender\fR(3)
\(em Add, remove and retrieve bus peers tracked in a bus peer tracking object
.br
\fBsd_bus_track_set_recursive\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_set_userdata\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_unref\fR(3)
\(em Track bus peers
.br
\fBsd_bus_track_unrefp\fR(3)
\(em Track bus peers
.br
\fBsd_bus_unref\fR(3)
\(em Create a new bus object and create or destroy references to it
.br
\fBsd_bus_unrefp\fR(3)
\(em Create a new bus object and create or destroy references to it
.br
\fBsd_event\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_add_child\fR(3)
\(em Add a child process state change event source to an event loop
.br
\fBsd_event_add_defer\fR(3)
\(em Add static event sources to an event loop
.br
\fBsd_event_add_exit\fR(3)
\(em Add static event sources to an event loop
.br
\fBsd_event_add_io\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_add_post\fR(3)
\(em Add static event sources to an event loop
.br
\fBsd_event_add_signal\fR(3)
\(em Add a UNIX process signal event source to an event loop
.br
\fBsd_event_add_time\fR(3)
\(em Add a timer event source to an event loop
.br
\fBSD_EVENT_ARMED\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_child_handler_t\fR(3)
\(em Add a child process state change event source to an event loop
.br
\fBsd_event_default\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_dispatch\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_exit\fR(3)
\(em Ask the event loop to exit
.br
\fBSD_EVENT_EXITING\fR(3)
\(em Low\-level event loop operations
.br
\fBSD_EVENT_FINISHED\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_get_exit_code\fR(3)
\(em Ask the event loop to exit
.br
\fBsd_event_get_fd\fR(3)
\(em Obtain a file descriptor to poll for event loop events
.br
\fBsd_event_get_state\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_get_tid\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_get_watchdog\fR(3)
\(em Enable event loop watchdog support
.br
\fBsd_event_handler_t\fR(3)
\(em Add static event sources to an event loop
.br
\fBSD_EVENT_INITIAL\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_io_handler_t\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_loop\fR(3)
\(em Run an event loop
.br
\fBsd_event_new\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_now\fR(3)
\(em Retrieve current event loop iteration timestamp
.br
\fBSD_EVENT_OFF\fR(3)
\(em Enable or disable event sources
.br
\fBSD_EVENT_ON\fR(3)
\(em Enable or disable event sources
.br
\fBSD_EVENT_ONESHOT\fR(3)
\(em Enable or disable event sources
.br
\fBSD_EVENT_PENDING\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_prepare\fR(3)
\(em Low\-level event loop operations
.br
\fBSD_EVENT_PREPARING\fR(3)
\(em Low\-level event loop operations
.br
\fBSD_EVENT_PRIORITY_IDLE\fR(3)
\(em Set or retrieve the priority of event sources
.br
\fBSD_EVENT_PRIORITY_IMPORTANT\fR(3)
\(em Set or retrieve the priority of event sources
.br
\fBSD_EVENT_PRIORITY_NORMAL\fR(3)
\(em Set or retrieve the priority of event sources
.br
\fBsd_event_ref\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_run\fR(3)
\(em Run an event loop
.br
\fBSD_EVENT_RUNNING\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_event_set_watchdog\fR(3)
\(em Enable event loop watchdog support
.br
\fBsd_event_signal_handler_t\fR(3)
\(em Add a UNIX process signal event source to an event loop
.br
\fBsd_event_source\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_source_get_child_pid\fR(3)
\(em Add a child process state change event source to an event loop
.br
\fBsd_event_source_get_description\fR(3)
\(em Set or retrieve descriptive names of event sources
.br
\fBsd_event_source_get_enabled\fR(3)
\(em Enable or disable event sources
.br
\fBsd_event_source_get_event\fR(3)
\(em Retrieve the event loop of an event source
.br
\fBsd_event_source_get_io_events\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_source_get_io_fd\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_source_get_io_revents\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_source_get_pending\fR(3)
\(em Determine pending state of event sources
.br
\fBsd_event_source_get_priority\fR(3)
\(em Set or retrieve the priority of event sources
.br
\fBsd_event_source_get_signal\fR(3)
\(em Add a UNIX process signal event source to an event loop
.br
\fBsd_event_source_get_time\fR(3)
\(em Add a timer event source to an event loop
.br
\fBsd_event_source_get_time_accuracy\fR(3)
\(em Add a timer event source to an event loop
.br
\fBsd_event_source_get_time_clock\fR(3)
\(em Add a timer event source to an event loop
.br
\fBsd_event_source_get_userdata\fR(3)
\(em Set or retrieve user data pointer of event sources
.br
\fBsd_event_source_ref\fR(3)
\(em Increase or decrease event source reference counters
.br
\fBsd_event_source_set_description\fR(3)
\(em Set or retrieve descriptive names of event sources
.br
\fBsd_event_source_set_enabled\fR(3)
\(em Enable or disable event sources
.br
\fBsd_event_source_set_io_events\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_source_set_io_fd\fR(3)
\(em Add an I/O event source to an event loop
.br
\fBsd_event_source_set_prepare\fR(3)
\(em Set a preparation callback for event sources
.br
\fBsd_event_source_set_priority\fR(3)
\(em Set or retrieve the priority of event sources
.br
\fBsd_event_source_set_time\fR(3)
\(em Add a timer event source to an event loop
.br
\fBsd_event_source_set_time_accuracy\fR(3)
\(em Add a timer event source to an event loop
.br
\fBsd_event_source_set_userdata\fR(3)
\(em Set or retrieve user data pointer of event sources
.br
\fBsd_event_source_unref\fR(3)
\(em Increase or decrease event source reference counters
.br
\fBsd_event_source_unrefp\fR(3)
\(em Increase or decrease event source reference counters
.br
\fBsd_event_time_handler_t\fR(3)
\(em Add a timer event source to an event loop
.br
\fBsd_event_unref\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_unrefp\fR(3)
\(em Acquire and release an event loop object
.br
\fBsd_event_wait\fR(3)
\(em Low\-level event loop operations
.br
\fBsd_get_machine_names\fR(3)
\(em Determine available seats, sessions, logged in users and virtual machines/containers
.br
\fBsd_get_seats\fR(3)
\(em Determine available seats, sessions, logged in users and virtual machines/containers
.br
\fBsd_get_sessions\fR(3)
\(em Determine available seats, sessions, logged in users and virtual machines/containers
.br
\fBsd_get_uids\fR(3)
\(em Determine available seats, sessions, logged in users and virtual machines/containers
.br
\fBsd_id128_from_string\fR(3)
\(em Format or parse 128\-bit IDs as strings
.br
\fBsd_id128_get_boot\fR(3)
\(em Retrieve 128\-bit IDs
.br
\fBsd_id128_get_invocation\fR(3)
\(em Retrieve 128\-bit IDs
.br
\fBsd_id128_get_machine\fR(3)
\(em Retrieve 128\-bit IDs
.br
\fBsd_id128_get_machine_app_specific\fR(3)
\(em Retrieve 128\-bit IDs
.br
\fBsd_id128_randomize\fR(3)
\(em Generate 128\-bit IDs
.br
\fBsd_id128_to_string\fR(3)
\(em Format or parse 128\-bit IDs as strings
.br
\fBsd_is_fifo\fR(3)
\(em Check the type of a file descriptor
.br
\fBsd_is_socket\fR(3)
\(em Check the type of a file descriptor
.br
\fBsd_is_socket_inet\fR(3)
\(em Check the type of a file descriptor
.br
\fBsd_is_socket_unix\fR(3)
\(em Check the type of a file descriptor
.br
\fBsd_is_special\fR(3)
\(em Check the type of a file descriptor
.br
\fBsd_listen_fds\fR(3)
\(em Check for file descriptors passed by the system manager
.br
\fBSD_LISTEN_FDS_START\fR(3)
\(em Check for file descriptors passed by the system manager
.br
\fBsd_listen_fds_with_names\fR(3)
\(em Check for file descriptors passed by the system manager
.br
\fBsd_login_monitor\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_flush\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_get_events\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_get_fd\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_get_timeout\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_new\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_unref\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_login_monitor_unrefp\fR(3)
\(em Monitor login sessions, seats, users and virtual machines/containers
.br
\fBsd_machine_get_class\fR(3)
\(em Determine the class and network interface indices of a locally running virtual machine or container\&.
.br
\fBsd_machine_get_ifindices\fR(3)
\(em Determine the class and network interface indices of a locally running virtual machine or container\&.
.br
\fBsd_notify\fR(3)
\(em Notify service manager about start\-up completion and other service status changes
.br
\fBsd_notifyf\fR(3)
\(em Notify service manager about start\-up completion and other service status changes
.br
\fBsd_peer_get_cgroup\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_peer_get_machine_name\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_peer_get_owner_uid\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_peer_get_session\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_pid_get_cgroup\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_pid_get_machine_name\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_pid_get_owner_uid\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_pid_get_session\fR(3)
\(em Determine session, unit, owner of a session, container/VM or slice of a specific PID or socket peer
.br
\fBsd_pid_notify\fR(3)
\(em Notify service manager about start\-up completion and other service status changes
.br
\fBsd_pid_notify_with_fds\fR(3)
\(em Notify service manager about start\-up completion and other service status changes
.br
\fBsd_pid_notifyf\fR(3)
\(em Notify service manager about start\-up completion and other service status changes
.br
\fBsd_seat_can_graphical\fR(3)
\(em Determine state of a specific seat
.br
\fBsd_seat_can_multi_session\fR(3)
\(em Determine state of a specific seat
.br
\fBsd_seat_can_tty\fR(3)
\(em Determine state of a specific seat
.br
\fBsd_seat_get_active\fR(3)
\(em Determine state of a specific seat
.br
\fBsd_seat_get_sessions\fR(3)
\(em Determine state of a specific seat
.br
\fBsd_session_get_class\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_desktop\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_display\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_remote_host\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_remote_user\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_seat\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_service\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_state\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_tty\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_type\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_uid\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_get_vt\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_is_active\fR(3)
\(em Determine state of a specific session
.br
\fBsd_session_is_remote\fR(3)
\(em Determine state of a specific session
.br
\fBsd_uid_get_display\fR(3)
\(em Determine login state of a specific Unix user ID
.br
\fBsd_uid_get_seats\fR(3)
\(em Determine login state of a specific Unix user ID
.br
\fBsd_uid_get_sessions\fR(3)
\(em Determine login state of a specific Unix user ID
.br
\fBsd_uid_get_state\fR(3)
\(em Determine login state of a specific Unix user ID
.br
\fBsd_uid_is_on_seat\fR(3)
\(em Determine login state of a specific Unix user ID
.br
\fBsd_watchdog_enabled\fR(3)
\(em Check whether the service manager expects watchdog keep\-alive notifications from a service
.br

.SH "SEE ALSO"
.PP
\fBelogind.directives\fR(7)
.PP
This index contains 259 entries, referring to 64 individual manual pages\&.
